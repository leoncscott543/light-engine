🚧 Light Engine Alpha Build Pipeline (v0.1.0 – v0.9.x)
🧱 Assumes: Tick engine, Fibra ECS, .beam system, Vulkan/WGPU backend, Aria, and multi-platform bootstrap are already working (from 1.0 prelude).
# Light Engine Alpha Build Pipeline

This document outlines the development pipeline for the **Light Engine Alpha** (v0.1.0 – v0.9.x). The pipeline assumes the following foundational components are already functional:

- **Tick Engine**
- **Fibra ECS**
- **.beam System**
- **Vulkan/WGPU Backend**
- **Aria**
- **Multi-Platform Bootstrap**

## Build Pipeline Overview

### ✅ 0.1 — Minimal Sandbox Simulation
**Goal:** Simulate and render the first Thing-based scene (e.g., a 1m³ iron box in a sealed room).

- Add simple GLTF/voxel preview for `.beam` exports
- Simulate material weight, velocity, and heat over time
- Log causal events (e.g., heat rise, momentum shift)
- CLI + render view

---

### ✅ 0.2 — Asset Interchange Validation
**Goal:** Round-trip a `.beam` file from Light Engine into Bevy and back.

- `.beam → Bevy` loader plugin
- Export GLTF + metadata bundle
- Support material + hierarchy preservation

---

### ✅ 0.3 — Real-Time GUI Shell (Dev GUI)
**Goal:** Let users manipulate simulations in real-time via minimal UI.

- Orbit cam, drag-to-inspect, Aria playground
- Tick stepper + playback speed controls
- Beam export button from live sim

---

### ✅ 0.4 — Darai: Agent + Cognitive Scaffold
**Goal:** Add first autonomous agents.

- Define `Agent` component and attach to Thing
- Script with Aria or call `Dara::decide()`
- Log decisions → state → action over time
- Basic goal-directed behavior: “navigate to zone”, “avoid contact”

---

### ✅ 0.5 — Matter System Expansion
**Goal:** Flesh out basic physical materials.

- Add pressure, density, mass, temperature
- Track phase transitions (solid → gas)
- Simple thermodynamic interactions (conduction, convection stubs)

---

### ✅ 0.6 — Cloud Runtime (Edge Simulation)
**Goal:** Simulate a `.beam` scene on an edge computer and sync world state to a central node.

- Add cloud/edge runtime scaffold
- Sync shared Thing positions via TCP
- Collect episode logs for Dara training

---

### ✅ 0.7 — Dara Model Roundtrip
**Goal:** Train a simple Dara agent on cloud traces and deploy back to edge sim.

- Run PyTorch RL training script
- Export policy + metadata to `.model` file
- Live-swap Dara models on an edge node

---

### ✅ 0.8 — World-Building Tools
**Goal:** Empower users to construct spaces from Things.

- Grid-based sandbox editor
- Aria editor integration
- Save scene as `.beam/scene_name/`

---

### ✅ 0.9 — Manifestation Expansion
**Goal:** Simulate beyond visual output.

- Add sound simulation (collision → sound event)
- Add haptics scaffold (e.g., pressure → actuator force)
- Begin scent placeholder system for emission + dispersion

---

## Alpha Exit Criteria (v0.9.x → v1.0)

The following criteria must be met to exit the Alpha phase:

- 🎮 **Full Simulation:** Can run a full simulation from CLI or GUI.
- 🧠 **Autonomous Agents:** Dara agent acts autonomously and modifies the world.
- 💾 **World Export:** World is exportable to `.beam`, round-trippable to Bevy.
- 🌐 **Edge Simulation:** Edge simulation running with cloud sync + model update.
- 🎛️ **Real-Time GUI:** Minimal real-time GUI with controls, inspector, and Aria editor.
✅ 0.1 — Minimal Sandbox Simulation
Goal: Simulate and render the first Thing-based scene (e.g., a 1m³ iron box in a sealed room).

Add simple GLTF/voxel preview for .beam exports

Simulate material weight, velocity, and heat over time

Log causal events (e.g., heat rise, momentum shift)

CLI + render view

✅ 0.2 — Asset Interchange Validation
Goal: Round-trip a .beam file from Light Engine into Bevy and back.

.beam → Bevy loader plugin

Export GLTF + metadata bundle

Support material + hierarchy preservation

✅ 0.3 — Real-Time GUI Shell (dev GUI)
Goal: Let users manipulate simulations in real-time via minimal UI.

Orbit cam, drag-to-inspect, Aria playground

Tick stepper + playback speed controls

Beam export button from live sim

✅ 0.4 — Darai: Agent + Cognitive Scaffold
Goal: Add first autonomous agents.

Define Agent component and attach to Thing

Script with Aria or call Dara::decide()

Log decisions → state → action over time

Basic goal-directed behavior: “navigate to zone”, “avoid contact”

✅ 0.5 — Matter System Expansion
Goal: Flesh out basic physical materials.

Add pressure, density, mass, temperature

Track phase transitions (solid → gas)

Simple thermodynamic interactions (conduction, convection stubs)

✅ 0.6 — Cloud Runtime (Edge Simulation)
Goal: Simulate a .beam scene on an edge computer and sync world state to a central node.

Add cloud/edge/ runtime scaffold

Sync shared Thing positions via TCP

Collect episode logs for Dara training

✅ 0.7 — Dara Model Roundtrip
Goal: Train a simple Dara agent on cloud traces and deploy back to edge sim.

Run PyTorch RL training script

Export policy + metadata to .model file

Live-swap Dara models on an edge node

✅ 0.8 — World-Building Tools
Goal: Empower users to construct spaces from THINGS/.

Grid-based sandbox editor

aria editor integration

Save scene as .beam/scene_name/

✅ 0.9 — Manifestation Expansion
Goal: Simulate beyond visual output.

Add sound simulation (collision → sound event)

Add haptics scaffold (e.g., pressure → actuator force)

Begin scent placeholder system for emission + dispersion

✅ Alpha Exit Criteria (v0.9.x → v1.0)
🎮 Can run a full simulation from CLI or GUI

🧠 Dara agent acts autonomously and modifies the world

💾 World is exportable to .beam, round-trippable to Bevy

🌐 Edge simulation running with cloud sync + model update

🎛️ Minimal real-time GUI with controls, inspector, Aria editor

