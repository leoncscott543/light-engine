name: Rust CI/CD Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add cross targets
        run: |
          rustup target add x86_64-unknown-linux-gnu
          rustup target add aarch64-unknown-linux-gnu

      - name: Install cross-compilation toolchain for aarch64
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build project
        run: cargo build --release --verbose

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

      - name: Run tests on multiple targets
        run: |
          cargo build --target x86_64-unknown-linux-gnu
          cargo test --target x86_64-unknown-linux-gnu
          cargo build --target aarch64-unknown-linux-gnu
          cargo test --target aarch64-unknown-linux-gnu

      - name: Build project (x86_64)
        run: cargo build --release --verbose

      - name: Run tests (x86_64)
        run: cargo test --verbose

      - name: Install cross
        run: cargo install cross

      - name: Cross build and test (aarch64)
        run: cross test --target aarch64-unknown-linux-gnu

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export multi-arch Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: leonscott543/lightengine:latest
          platforms: linux/amd64,linux/arm64

      - name: Run tests in Docker (x86_64)
        run: docker run --rm leonscott543/lightengine cargo test --verbose

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo build --release --verbose
      - run: cargo test --verbose

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo build --release --verbose
      - run: cargo test --verbose

