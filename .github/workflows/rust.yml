name: Rust CI/CD Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Build (x86_64)
        run: cargo build --release --verbose

      - name: Run tests (x86_64)
        run: cargo test --verbose

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export Docker image (x86_64 only)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: leonscott543/light-engine:latest
          platforms: linux/amd64   # <--- single platform
          load: true              # <--- works with single platform

      - name: Run tests in Docker (x86_64)
        run: docker run --rm leonscott543/light-engine cargo test --verbose

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: windows-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            windows-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: windows-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            windows-cargo-git-

      - run: cargo build --release --verbose
      - run: cargo test --verbose

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: macos-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            macos-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: macos-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            macos-cargo-git-

      - run: cargo build --release --verbose
      - run: cargo test --verbose

